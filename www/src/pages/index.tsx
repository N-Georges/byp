import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { gql, useQuery } from "@apollo/client";
import { GetServerSideProps, InferGetServerSidePropsType } from "next";
import client from "@/clients/apollo-client";

type Data = {
  id: string;
  name: string;
};

const QUERY = gql`
  query {
    friend {
      id
      name
    }
  }
`;

export default function Home({
  friends,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  // const { loading, error, data } = useQuery(QUERY);

  console.log(friends);

  // if (loading) {
  //   return <div>Loading...</div>;
  // }
  // if (error) {
  //   console.error(error);
  //   return <div>Error!</div>;
  // }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {friends.map((friend: Data) => (
          <div key={friend.id}>
            <h1>{friend.name}</h1>
          </div>
        ))}
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const { data } = await client.query({
    query: gql`
      query Friends {
        friend {
          id
          name
        }
      }
    `,
  });

  return {
    props: {
      friends: data.friend,
    },
  };
};
